#include <iostream>
#include <iomanip>
#include <fstream>
#include <string>
using namespace std;

int main()
{
	int comma = 0;
	int slash = 0;
	string year = "";
	string month = "";
	string supplies = "";
	string type = "";
	string dateTrans = "";
	string dateComp = "";
	string store = "";
	string amount = "";
	string expenses[18][4] = {"0.0"};
		
	ifstream inExpenses;
	inExpenses.open("Accounting.txt");
	
	if (inExpenses.is_open())
	{
		getline(inExpenses, supplies, '\n');
		while (!inExpenses.eof())
		{
			for (int count = 0; count < 6; count++)
			{
				comma = supplies.find(",", 0);
				//cout << comma << endl;
				type = supplies.substr(0, comma);
				supplies.erase(0, comma + 1);
				//cout << type << endl;
				comma = 0;
				comma = supplies.find(",", 0);
				dateTrans = supplies.substr(0, comma);
				supplies.erase(0, comma + 1);
				//cout << dateTrans << endl;
				comma = 0;
				comma = supplies.find(",", 0);
				dateComp = supplies.substr(0, comma);
				//cout << dateComp << endl;
				supplies.erase(0, comma + 1);
				comma = 0;
				comma = supplies.find(",", 0);
				store = supplies.substr(0, comma);
				supplies.erase(0, comma + 1);
				comma = 0;
				comma = supplies.find(",", 0);
				amount = supplies.substr(0);
				for (int r = 0; r < 18; r++)
				{
						expenses[r][0] = dateTrans;
						expenses[r][1] = dateComp;
						expenses[r][2] = store;
						expenses[r][3] = amount;
				}
				for (int row = 0; row < 18; row++)
				{
					for (int column = 0; column < 4; column++)
					{
						cout << expenses[row][column] << "  "  << endl;
					
					}
				}
				type = "";
				string dateTrans = "";
				string dateComp = "";
				string store = "";
				string amount = "";
				getline(inExpenses, supplies, '\n');
			}
		}
		
	}
	inExpenses.close();
	
	ofstream outExpenses;
	outExpenses.open("Accounting2.txt");
	string bought = "";
	
	if (outExpenses.is_open())
	{
		outExpenses << "Category      " << "Amount      " << "Year     " << "Month    " << endl;
		for (int r = 0; r < 18; r++)
		{
				bought = expenses[r][0];
				outExpenses << bought << ',';
				bought = "";
				bought = expenses[r][1];
				outExpenses << bought << ',';
				bought = "";
				bought = expenses[r][2];
				outExpenses << bought << ',';
				bought = "";
				bought = expenses[r][3];
				outExpenses << bought << ',';
				bought = "";
		}
	}
}
